// <auto-generated />
using System;
using FileChecker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FileChecker.Data.Migrations
{
    [DbContext(typeof(FileCheckerDbContext))]
    partial class FileCheckerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FileChecker.Data.Entities.AppFile", b =>
                {
                    b.Property<int>("AppFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppFileId"));

                    b.Property<string>("Checksum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FileSizeInBytes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParentDirectoryPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppFileId");

                    b.ToTable("AppFiles");
                });

            modelBuilder.Entity("FileChecker.Data.Entities.Scan", b =>
                {
                    b.Property<int>("ScanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScanId"));

                    b.Property<int>("AppFileId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentChecksum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CurrentSizeInBytes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ScanDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ScanId");

                    b.HasIndex("AppFileId");

                    b.ToTable("Scans");
                });

            modelBuilder.Entity("FileChecker.Data.Entities.Scan", b =>
                {
                    b.HasOne("FileChecker.Data.Entities.AppFile", "AppFile")
                        .WithMany()
                        .HasForeignKey("AppFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppFile");
                });
#pragma warning restore 612, 618
        }
    }
}
